<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visualisierungen mit Seaborn on Zertifikatskurs Data Librarian - Modul 3 - Daten analysieren und darstellen</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/descriptive_statistics/visualizations/</link><description>Recent content in Visualisierungen mit Seaborn on Zertifikatskurs Data Librarian - Modul 3 - Daten analysieren und darstellen</description><generator>Hugo -- gohugo.io</generator><language>de-DE</language><atom:link href="https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/descriptive_statistics/visualizations/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorial</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/descriptive_statistics/visualizations/tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/descriptive_statistics/visualizations/tutorial/</guid><description>Statistical analysis is a process of understanding how variables in a dataset relate to each other and how those relationships depend on other variables. Visualization can be a core component of this process because, when data are visualized properly, the human visual system can see trends and patterns that indicate a relationship. https://seaborn.pydata.org/tutorial/relational.html
Die zahlreichen Funktionen, die seaborn bietet basieren immer auf dem gleichen Prinzip. Visualisiert werden (nominale, ordinale, metrische) Variablen eines Datensatzes, die in Form eines DataFrames vorliegen.</description></item><item><title>Weitere Beispiele</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/descriptive_statistics/visualizations/examples/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/descriptive_statistics/visualizations/examples/</guid><description>Im Tutorial hast Du gesehen, wie Du ein Streudiagramm erstellen kannst. Hier werden exemplarisch weitere Möglichkeiten gezeigt, die Daten des Datensatzes zu visualisieren. Die wichtigste Funktion ist hierbei sns.catplot().
import pandas as pd import seaborn as sns import matplotlib.pyplot as plt import numpy as np # matplotlib inline sns.set() df = pd.read_csv(&amp;#34;../data/Library_Usage.csv&amp;#34;) Nominale und ordinale Variablen Univariate Häufigkeits- und Bivariate Kreuztatabellen können mit Balkendiagrammen visualisiert werden:
sns.catplot(y=&amp;#39;Year Patron Registered&amp;#39;, data=df, kind=&amp;#39;count&amp;#39;, color=&amp;#34;steelblue&amp;#34;) sns.</description></item></channel></rss>