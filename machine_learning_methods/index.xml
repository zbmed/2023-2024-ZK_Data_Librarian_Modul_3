<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Machinelles Lernen - Praxis mit scikit-learn on Zertifikatskurs Data Librarian - Modul 3 - Daten analysieren und darstellen</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/</link><description>Recent content in Machinelles Lernen - Praxis mit scikit-learn on Zertifikatskurs Data Librarian - Modul 3 - Daten analysieren und darstellen</description><generator>Hugo -- gohugo.io</generator><language>de-DE</language><atom:link href="https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/index.xml" rel="self" type="application/rss+xml"/><item><title>Klassifikation</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/classification/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/classification/</guid><description>Bitte erstell ein neues Jupyter-Notebook und nennen es Klassifikation.
Wir nutzen ein Datenset, das handschriftliche Ziffern in Form von 8x8 Feldern mit Werten der Farbstärkte darstellt. Eine Beschreibung des Datensets gib es bei scikit-learn und im UC Irvine Machine Learning Repository. Dieses Datenset bringt scikit-learn selber mit.
Wir importieren eine Funktion zum Laden des Datensets und rufen dieses auf.
from sklearn.datasets import load_digits digits = load_digits() Die Daten und Metadaten sind in einem sogenannten Bunch-Objekt organisiert</description></item><item><title>Regression</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/regression/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/regression/</guid><description>Bitte erstell ein neues Jupyter-Notebook und nennen esRegression.
Hier führen wir eine einfache Regression von zwei Features (also in zwei Dimensionen durch), da dies sich leichter visualisieren lässt. Tatsächlich ist man aber in der Anzahl an Features nicht eingeschränkt. Ziel ist es ein Regression-Model zu erstellen, in dem man einen numerischen Eingabe-Wert (x) eingibt und einen numerischen Ausgabe-Wert (y) erhält.
Wir erzeugen und ein künstlichen Datenset von 500 Datenpunkten mit Hilfe der Funktion make_regression.</description></item><item><title>Dimensionsreduktion</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/dimension_reduction/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/dimension_reduction/</guid><description>Bitte erstelle ein neues Jupyter-Notebook und nennen es Dimensionsreduktion.
Wir laden das Datenset:
from sklearn.datasets import load_digits digits = load_digits() Wir wollen mit einer Pricinple Component Analysis (PCA) die Dimensionreduktion durchführen. Hierzu laden wir zuerst die Klasse und erzeugen eine Instanz davon. Wir geben an, dass wir danach nur zwei Dimensionen (&amp;ldquo;components&amp;rdquo;) erhalten möchten. Dadurch lassen sie die Daten später auf in einem Plot mit zwei Achsen abbilden.
from sklearn.decomposition import PCA pca = PCA(random_state=1, n_components=2) Wir können die Tranformation mit der Funktion fit_transform durchführen.</description></item><item><title>Quiz</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/quiz/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/quiz/</guid><description/></item><item><title>Musterlösungen</title><link>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/solutions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zbmed.github.io/2023-2024-ZK_Data_Librarian_Modul_3/machine_learning_methods/solutions/</guid><description>Hier die Jupyter Notebooks mit Musterlösungen (ablegen mit &amp;ldquo;Speichern unter&amp;rdquo;):
Klassifikation Regression Dimensionsreduktion</description></item></channel></rss>